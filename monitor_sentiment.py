#!/usr/bin/env python3
"""
–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Sentiment –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
"""

import sys
import time
from datetime import datetime
import yaml
sys.path.append('src')

from data_collection.sentiment_collector import SentimentCollector

def load_config():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é."""
    try:
        with open('config/smart_adaptive_config.yaml', 'r', encoding='utf-8') as f:
            return yaml.safe_load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞: {e}")
        return {}

def print_separator():
    """–ü–µ—á–∞—Ç–∞–µ—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å."""
    print("=" * 80)

def monitor_sentiment():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞."""
    print("üöÄ SENTIMENT MONITOR - –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print_separator()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = load_config()
    advanced_config = config.get('advanced_features', {})
    
    if not advanced_config.get('enabled', False):
        print("‚ö†Ô∏è Advanced features –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        print("–í–∫–ª—é—á–∏—Ç–µ –∏—Ö –≤ config/smart_adaptive_config.yaml:")
        print("advanced_features:")
        print("  enabled: true")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º collector
    api_keys = advanced_config.get('api_keys', {})
    collector = SentimentCollector(api_keys)
    
    print("‚úÖ Sentiment Collector –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    print("üìä –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
    print_separator()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    update_interval = 300  # 5 –º–∏–Ω—É—Ç
    iteration = 0
    
    try:
        while True:
            iteration += 1
            current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            
            print(f"\nüìÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ #{iteration} - {current_time}")
            print("-" * 60)
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º Bybit –¥–∞–Ω–Ω—ã–µ
                print("üåê –ü–æ–ª—É—á–µ–Ω–∏–µ Bybit Market Opportunities...")
                bybit_data = collector.get_bybit_opportunities()
                
                if bybit_data:
                    print("‚úÖ Bybit –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:")
                    
                    # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
                    market_sentiment = bybit_data.get('market_sentiment', 0.5)
                    hot_sectors = bybit_data.get('hot_sectors', [])
                    trending_coins = bybit_data.get('trending_coins', [])
                    gainers_losers = bybit_data.get('gainers_losers', {})
                    
                    print(f"   üìà Market Sentiment: {market_sentiment:.3f}")
                    print(f"   üî• Hot Sectors: {len(hot_sectors)}")
                    print(f"   üìä Trending Coins: {len(trending_coins)}")
                    
                    # Gainers/Losers
                    gainers = gainers_losers.get('gainers', [])
                    losers = gainers_losers.get('losers', [])
                    print(f"   üìà Gainers: {len(gainers)}")
                    print(f"   üìâ Losers: {len(losers)}")
                    
                    # –†–∞—Å—á–µ—Ç –∫–æ–º–ø–æ–∑–∏—Ç–Ω–æ–≥–æ sentiment
                    if trending_coins:
                        positive_trending = sum(1 for coin in trending_coins if coin.get('sentiment', 0) > 0)
                        positive_ratio = positive_trending / len(trending_coins)
                    else:
                        positive_ratio = 0.5
                    
                    if len(gainers) + len(losers) > 0:
                        gainers_ratio = len(gainers) / (len(gainers) + len(losers))
                    else:
                        gainers_ratio = 0.5
                    
                    composite_score = (
                        market_sentiment * 0.4 +
                        positive_ratio * 0.3 +
                        gainers_ratio * 0.3
                    )
                    
                    print(f"\nüéØ –ö–û–ú–ü–û–ó–ò–¢–ù–´–ï –ú–ï–¢–†–ò–ö–ò:")
                    print(f"   Positive Trending Ratio: {positive_ratio:.3f}")
                    print(f"   Gainers Ratio: {gainers_ratio:.3f}")
                    print(f"   Composite Sentiment: {composite_score:.3f}")
                    
                    # Market Regime
                    if composite_score > 0.6:
                        regime = "üêÇ –ë–´–ß–ò–ô"
                        regime_desc = "–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ–∫—É–ø–æ–∫"
                    elif composite_score < 0.4:
                        regime = "üêª –ú–ï–î–í–ï–ñ–ò–ô"
                        regime_desc = "–û—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å, –≤–æ–∑–º–æ–∂–Ω—ã —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏"
                    else:
                        regime = "üòê –ù–ï–ô–¢–†–ê–õ–¨–ù–´–ô"
                        regime_desc = "–°–º–µ—à–∞–Ω–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è"
                    
                    print(f"\nüèõÔ∏è MARKET REGIME: {regime}")
                    print(f"   {regime_desc}")
                    
                    # –¢–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                    print(f"\nüí° –¢–û–†–ì–û–í–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
                    if composite_score > 0.7:
                        print("   üöÄ –í—ã—Å–æ–∫–∏–π sentiment - —Å–Ω–∏–∑–∏—Ç—å –ø–æ—Ä–æ–≥–∏ –ø–æ–∫—É–ø–æ–∫")
                        print("   üìà –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π")
                        print("   ‚è∞ –•–æ—Ä–æ—à–∏–π timing –¥–ª—è –≤—Ö–æ–¥–æ–≤")
                    elif composite_score < 0.3:
                        print("   üõ°Ô∏è –ù–∏–∑–∫–∏–π sentiment - –ø–æ–≤—ã—Å–∏—Ç—å –ø–æ—Ä–æ–≥–∏ –ø–æ–∫—É–ø–æ–∫")
                        print("   üìâ –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —É–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π") 
                        print("   ‚ö†Ô∏è –û—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å —Å –Ω–æ–≤—ã–º–∏ –ø–æ–∑–∏—Ü–∏—è–º–∏")
                    else:
                        print("   ‚öñÔ∏è –°—Ä–µ–¥–Ω–∏–π sentiment - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è")
                        print("   üìä –ü–æ–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã")
                    
                    # –ê–ª–µ—Ä—Ç—ã
                    alerts = []
                    if composite_score > 0.8:
                        alerts.append("üö® –≠–ö–°–¢–†–ï–ú–ê–õ–¨–ù–ê–Ø –ñ–ê–î–ù–û–°–¢–¨ - –≤–æ–∑–º–æ–∂–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è")
                    elif composite_score < 0.2:
                        alerts.append("üö® –≠–ö–°–¢–†–ï–ú–ê–õ–¨–ù–´–ô –°–¢–†–ê–• - –≤–æ–∑–º–æ–∂–µ–Ω –æ—Ç—Å–∫–æ–∫")
                    
                    if len(gainers) > len(losers) * 2:
                        alerts.append("‚ö° –°–∏–ª—å–Ω–æ–µ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—Ç—É—â–∏—Ö –∞–∫—Ç–∏–≤–æ–≤")
                    elif len(losers) > len(gainers) * 2:
                        alerts.append("‚ö° –°–∏–ª—å–Ω–æ–µ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–¥–∞—é—â–∏—Ö –∞–∫—Ç–∏–≤–æ–≤")
                    
                    if alerts:
                        print(f"\nüö® –ê–õ–ï–†–¢–´:")
                        for alert in alerts:
                            print(f"   {alert}")
                    
                    # –î–µ—Ç–∞–ª–∏ –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º (–µ—Å–ª–∏ –µ—Å—Ç—å)
                    if hot_sectors:
                        print(f"\nüî• –ì–û–†–Ø–ß–ò–ï –°–ï–ö–¢–û–†–ê:")
                        for i, sector in enumerate(hot_sectors[:5], 1):
                            print(f"   {i}. {sector}")
                    
                    # –î–µ—Ç–∞–ª–∏ –ø–æ —Ç—Ä–µ–Ω–¥–∏–Ω–≥–æ–≤—ã–º –º–æ–Ω–µ—Ç–∞–º (–µ—Å–ª–∏ –µ—Å—Ç—å)
                    if trending_coins:
                        print(f"\nüìä TRENDING COINS:")
                        for i, coin in enumerate(trending_coins[:5], 1):
                            coin_sentiment = coin.get('sentiment', 0)
                            sentiment_emoji = "üìà" if coin_sentiment > 0 else "üìâ" if coin_sentiment < 0 else "‚û°Ô∏è"
                            print(f"   {i}. {coin.get('name', 'Unknown')} {sentiment_emoji}")
                    
                else:
                    print("‚ö†Ô∏è Bybit –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
                    print("   –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:")
                    print("   Market Sentiment: 0.500 (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π)")
                    print("   Market Regime: üòê –ù–ï–ô–¢–†–ê–õ–¨–ù–´–ô")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
                print("   –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
            
            print(f"\n‚è∞ –°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ {update_interval//60} –º–∏–Ω—É—Ç...")
            print("=" * 80)
            
            # –ñ–¥–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            time.sleep(update_interval)
            
    except KeyboardInterrupt:
        print(f"\n\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")

if __name__ == "__main__":
    monitor_sentiment() 