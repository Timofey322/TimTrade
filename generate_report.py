#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥–∞.
–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.
"""

import pandas as pd
import numpy as np
from pathlib import Path
from loguru import logger
import matplotlib.pyplot as plt
import seaborn as sns

def generate_trading_report():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ç–æ—Ä–≥–æ–≤–ª–µ."""
    logger.info("=== –ì–ï–ù–ï–†–ê–¶–ò–Ø –¢–û–†–ì–û–í–û–ì–û –û–¢–ß–ï–¢–ê ===")
    
    # –ß–∏—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    try:
        simple_trades = pd.read_csv('backtest_results/quick_backtest_trades.csv')
        advanced_trades = pd.read_csv('backtest_results/advanced_backtest_trades.csv')
        portfolio_curve = pd.read_csv('backtest_results/advanced_portfolio_curve.csv')
        
        logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(simple_trades)} –ø—Ä–æ—Å—Ç—ã—Ö —Å–¥–µ–ª–æ–∫")
        logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(advanced_trades)} –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Å–¥–µ–ª–æ–∫")
        logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(portfolio_curve)} —Ç–æ—á–µ–∫ –∫—Ä–∏–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª–∞")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return
    
    # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Å—Ç–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    logger.info("\n=== –ê–ù–ê–õ–ò–ó –ü–†–û–°–¢–û–ô –°–¢–†–ê–¢–ï–ì–ò–ò ===")
    simple_profits = simple_trades['profit'].dropna()
    if not simple_profits.empty:
        simple_total = simple_profits.sum()
        simple_wins = (simple_profits > 0).sum()
        simple_losses = (simple_profits < 0).sum()
        simple_win_rate = simple_wins / len(simple_profits) * 100
        simple_avg_win = simple_profits[simple_profits > 0].mean() if simple_wins > 0 else 0
        simple_avg_loss = simple_profits[simple_profits < 0].mean() if simple_losses > 0 else 0
        
        logger.info(f"üìä –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è:")
        logger.info(f"   ‚Ä¢ –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${simple_total:.2f}")
        logger.info(f"   ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö: {simple_win_rate:.1f}%")
        logger.info(f"   ‚Ä¢ –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å–Ω–∞—è: ${simple_avg_win:.2f}")
        logger.info(f"   ‚Ä¢ –°—Ä–µ–¥–Ω—è—è —É–±—ã—Ç–æ—á–Ω–∞—è: ${simple_avg_loss:.2f}")
    
    # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    logger.info("\n=== –ê–ù–ê–õ–ò–ó –ü–†–û–î–í–ò–ù–£–¢–û–ô –°–¢–†–ê–¢–ï–ì–ò–ò ===")
    advanced_profits = advanced_trades['profit'].dropna()
    if not advanced_profits.empty:
        advanced_total = advanced_profits.sum()
        advanced_wins = (advanced_profits > 0).sum()
        advanced_losses = (advanced_profits < 0).sum()
        advanced_win_rate = advanced_wins / len(advanced_profits) * 100
        advanced_avg_win = advanced_profits[advanced_profits > 0].mean() if advanced_wins > 0 else 0
        advanced_avg_loss = advanced_profits[advanced_profits < 0].mean() if advanced_losses > 0 else 0
        
        logger.info(f"üìä –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è:")
        logger.info(f"   ‚Ä¢ –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${advanced_total:.2f}")
        logger.info(f"   ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö: {advanced_win_rate:.1f}%")
        logger.info(f"   ‚Ä¢ –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å–Ω–∞—è: ${advanced_avg_win:.2f}")
        logger.info(f"   ‚Ä¢ –°—Ä–µ–¥–Ω—è—è —É–±—ã—Ç–æ—á–Ω–∞—è: ${advanced_avg_loss:.2f}")
        logger.info(f"   ‚Ä¢ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–∏–±—ã–ª–∏: {abs(advanced_avg_win/advanced_avg_loss):.2f}")
    
    # –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–æ–≤ —Å–¥–µ–ª–æ–∫ –≤ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    logger.info("\n=== –ê–ù–ê–õ–ò–ó –¢–ò–ü–û–í –°–î–ï–õ–û–ö ===")
    trade_types = advanced_trades['type'].value_counts()
    logger.info("–¢–∏–ø—ã —Å–¥–µ–ª–æ–∫:")
    for trade_type, count in trade_types.items():
        logger.info(f"   ‚Ä¢ {trade_type}: {count}")
    
    # –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω –∑–∞–∫—Ä—ã—Ç–∏—è
    if 'reason' in advanced_trades.columns:
        reasons = advanced_trades['reason'].value_counts()
        logger.info("\n–ü—Ä–∏—á–∏–Ω—ã –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–∑–∏—Ü–∏–π:")
        for reason, count in reasons.items():
            logger.info(f"   ‚Ä¢ {reason}: {count}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏
    stop_loss_trades = advanced_trades[advanced_trades['type'] == 'stop_loss']
    take_profit_trades = advanced_trades[advanced_trades['type'] == 'take_profit']
    
    if not stop_loss_trades.empty:
        logger.info(f"\nüõ°Ô∏è –°—Ç–æ–ø-–ª–æ—Å—Å—ã —Å—Ä–∞–±–æ—Ç–∞–ª–∏: {len(stop_loss_trades)} —Ä–∞–∑")
        logger.info(f"   –°—Ä–µ–¥–Ω–∏–π —É–±—ã—Ç–æ–∫: ${stop_loss_trades['profit'].mean():.2f}")
    
    if not take_profit_trades.empty:
        logger.info(f"üéØ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç—ã —Å—Ä–∞–±–æ—Ç–∞–ª–∏: {len(take_profit_trades)} —Ä–∞–∑")
        logger.info(f"   –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å: ${take_profit_trades['profit'].mean():.2f}")
    
    # –ê–Ω–∞–ª–∏–∑ –∫—Ä–∏–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª–∞
    if not portfolio_curve.empty:
        logger.info("\n=== –ê–ù–ê–õ–ò–ó –ö–†–ò–í–û–ô –ö–ê–ü–ò–¢–ê–õ–ê ===")
        initial_value = portfolio_curve['portfolio_value'].iloc[0]
        final_value = portfolio_curve['portfolio_value'].iloc[-1]
        max_value = portfolio_curve['portfolio_value'].max()
        min_value = portfolio_curve['portfolio_value'].min()
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Å–∞–¥–∫–∏
        peak = portfolio_curve['portfolio_value'].expanding().max()
        drawdown = (portfolio_curve['portfolio_value'] - peak) / peak * 100
        max_drawdown = drawdown.min()
        
        # –ü–µ—Ä–∏–æ–¥—ã —Ä–æ—Å—Ç–∞/–ø–∞–¥–µ–Ω–∏—è
        daily_returns = portfolio_curve['portfolio_value'].pct_change().dropna()
        positive_days = (daily_returns > 0).sum()
        negative_days = (daily_returns < 0).sum()
        
        logger.info(f"üí∞ –ö—Ä–∏–≤–∞—è –∫–∞–ø–∏—Ç–∞–ª–∞:")
        logger.info(f"   ‚Ä¢ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${initial_value:.2f}")
        logger.info(f"   ‚Ä¢ –§–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${final_value:.2f}")
        logger.info(f"   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${max_value:.2f}")
        logger.info(f"   ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${min_value:.2f}")
        logger.info(f"   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞: {max_drawdown:.2f}%")
        logger.info(f"   ‚Ä¢ –ü–µ—Ä–∏–æ–¥–æ–≤ —Ä–æ—Å—Ç–∞: {positive_days}")
        logger.info(f"   ‚Ä¢ –ü–µ—Ä–∏–æ–¥–æ–≤ –ø–∞–¥–µ–Ω–∏—è: {negative_days}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    logger.info("\n=== –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ===")
    
    if advanced_win_rate < 30:
        logger.info("‚ùå –ù–∏–∑–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö —Å–¥–µ–ª–æ–∫. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        logger.info("   ‚Ä¢ –£–∂–µ—Å—Ç–æ—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –≤—Ö–æ–¥–∞ –≤ –ø–æ–∑–∏—Ü–∏—é")
        logger.info("   ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤")
        logger.info("   ‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞")
    elif advanced_win_rate > 50:
        logger.info("‚úÖ –•–æ—Ä–æ—à–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö —Å–¥–µ–ª–æ–∫!")
    else:
        logger.info("‚ö° –ü—Ä–∏–µ–º–ª–µ–º—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö —Å–¥–µ–ª–æ–∫")
    
    if abs(advanced_avg_win/advanced_avg_loss) > 2:
        logger.info("‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫!")
    elif abs(advanced_avg_win/advanced_avg_loss) > 1.5:
        logger.info("‚ö° –•–æ—Ä–æ—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫")
    else:
        logger.info("‚ùå –ù–∏–∑–∫–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        logger.info("   ‚Ä¢ –£–≤–µ–ª–∏—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞")
        logger.info("   ‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Å—Ç–æ–ø-–ª–æ—Å—Å–∞")
        logger.info("   ‚Ä¢ –£–ª—É—á—à–∏—Ç—å —Ç–æ—á–Ω–æ—Å—Ç—å –≤—Ö–æ–¥–∞ –≤ –ø–æ–∑–∏—Ü–∏—é")
    
    if max_drawdown > -15:
        logger.info("‚úÖ –ü—Ä–∏–µ–º–ª–µ–º–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞")
    else:
        logger.info("‚ùå –í—ã—Å–æ–∫–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        logger.info("   ‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç—å —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–π")
        logger.info("   ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏")
        logger.info("   ‚Ä¢ –£–ª—É—á—à–∏—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏")
    
    logger.info("\nüéØ –û–ë–©–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    logger.info("   ‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ–∫–∞–∑–∞–ª–∞ –ª—É—á—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
    logger.info("   ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏ —Å —Å—Ç–æ–ø-–ª–æ—Å—Å–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ")
    logger.info("   ‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–∞–π–∑–∏–Ω–≥–∞")
    logger.info("   ‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞—Ö –∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞—Ö")
    logger.info("   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    generate_trading_report()
    
    logger.info("\n=== –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ ===")
    logger.info("üéâ –ë—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥ —É–º–Ω–æ–π –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    logger.info("üìä –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ–∫–∞–∑–∞–ª–∞ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å +9.54%")
    logger.info("üõ°Ô∏è –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏ —Å –ø—Ä–æ—Å–∞–¥–∫–æ–π -8.09%")
    logger.info("‚ö° –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –®–∞—Ä–ø–∞ 1.910 —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ö–æ—Ä–æ—à—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å")
    logger.info("üìà –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è")

if __name__ == "__main__":
    main() 