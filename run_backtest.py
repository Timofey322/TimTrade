#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥–∞ —Ç–æ—Ä–≥–æ–≤–æ–π –º–æ–¥–µ–ª–∏.
"""

import sys
from pathlib import Path
from datetime import datetime, timedelta
from loguru import logger

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

from src.backtesting import BacktestRunner


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥–∞."""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logger.add("logs/backtest.log", rotation="1 day", retention="7 days")
    
    try:
        # –°–æ–∑–¥–∞–µ–º runner
        runner = BacktestRunner()
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥–∞
        backtest_config = {
            'initial_capital': 10000,  # –ù–∞—á–∞–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª
            'commission': 0.001,       # –ö–æ–º–∏—Å—Å–∏—è 0.1%
            'slippage': 0.0005,        # –ü—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏–µ 0.05%
            'position_size': 0.05,     # –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –¥–æ 5% –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞
            'min_confidence': 0.75,    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–æ 75%
            'stop_loss': 0.015,        # –£–º–µ–Ω—å—à–∞–µ–º Stop Loss –¥–æ 1.5%
            'take_profit': 0.03,       # –£–º–µ–Ω—å—à–∞–µ–º Take Profit –¥–æ 3%
            'max_positions': 2         # –£–º–µ–Ω—å—à–∞–µ–º –º–∞–∫—Å–∏–º—É–º –ø–æ–∑–∏—Ü–∏–π –¥–æ 2
        }
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥–∞
        symbol = "BTC/USDT"
        model_path = "models/improved_xgboost_BTC_USDT_latest.pkl"
        
        # –ü–µ—Ä–∏–æ–¥ –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –º–µ—Å—è—Ü–∞ –¥–ª—è 5m/15m —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤)
        end_date = datetime.now().strftime("%Y-%m-%d")
        start_date = (datetime.now() - timedelta(days=60)).strftime("%Y-%m-%d")
        
        print(f"–ó–∞–ø—É—Å–∫ –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥–∞ –¥–ª—è {symbol}")
        print(f"–ü–µ—Ä–∏–æ–¥: {start_date} - {end_date}")
        print(f"–ú–æ–¥–µ–ª—å: {model_path}")
        print(f"–ù–∞—á–∞–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: ${backtest_config['initial_capital']:,.2f}")
        print("-" * 50)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥
        results = runner.run_full_backtest(
            symbol=symbol,
            model_path=model_path,
            start_date=start_date,
            end_date=end_date,
            backtest_config=backtest_config
        )
        
        if results:
            print("\n‚úÖ –ë—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ backtest_results/")
        else:
            print("\n‚ùå –û—à–∏–±–∫–∞ –≤ –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥–µ")
            return 1
            
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1
    
    return 0


if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code) 