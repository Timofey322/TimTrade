#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –±—ç–∫—Ç–µ—Å—Ç–∞
"""

from datetime import datetime, timedelta
import pandas as pd

def analyze_backtest_timeframe():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –±—ç–∫—Ç–µ—Å—Ç–∞."""
    
    print("=" * 80)
    print("üìä –ê–ù–ê–õ–ò–ó –í–†–ï–ú–ï–ù–ù–û–ì–û –ü–ï–†–ò–û–î–ê –ò –î–û–•–û–î–ù–û–°–¢–ò")
    print("=" * 80)
    
    # –î–∞–Ω–Ω—ã–µ –∏–∑ –±—ç–∫—Ç–µ—Å—Ç–∞
    start_date = "2025-04-18 06:25:00"
    end_date = "2025-06-26 16:55:00"
    initial_capital = 10000.0
    final_capital = 10941.695739231216
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞—Ç
    start_dt = datetime.strptime(start_date, "%Y-%m-%d %H:%M:%S")
    end_dt = datetime.strptime(end_date, "%Y-%m-%d %H:%M:%S")
    
    # –†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
    total_duration = end_dt - start_dt
    total_days = total_duration.days
    total_hours = total_duration.total_seconds() / 3600
    
    # –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏
    total_return_abs = final_capital - initial_capital
    total_return_pct = (final_capital / initial_capital - 1) * 100
    
    print(f"üìÖ –í–†–ï–ú–ï–ù–ù–û–ô –ü–ï–†–ò–û–î:")
    print(f"   –ù–∞—á–∞–ª–æ:     {start_date}")
    print(f"   –û–∫–æ–Ω—á–∞–Ω–∏–µ:  {end_date}")
    print(f"   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:")
    print(f"     ‚Ä¢ {total_days} –¥–Ω–µ–π")
    print(f"     ‚Ä¢ {total_hours:.1f} —á–∞—Å–æ–≤")
    print(f"     ‚Ä¢ {total_duration.total_seconds()/60:.0f} –º–∏–Ω—É—Ç")
    
    # –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º
    months = (end_dt.year - start_dt.year) * 12 + (end_dt.month - start_dt.month)
    if end_dt.day < start_dt.day:
        months -= 1
    
    weeks = total_days // 7
    remaining_days = total_days % 7
    
    print(f"\nüìä –†–ê–ó–ë–ò–í–ö–ê –ü–ï–†–ò–û–î–ê:")
    print(f"   ‚Ä¢ ~{months} –º–µ—Å—è—Ü–∞ –∏ {remaining_days} –¥–Ω–µ–π")
    print(f"   ‚Ä¢ {weeks} –ø–æ–ª–Ω—ã—Ö –Ω–µ–¥–µ–ª—å –∏ {remaining_days} –¥–Ω–µ–π")
    
    print(f"\nüí∞ –§–ò–ù–ê–ù–°–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"   –ù–∞—á–∞–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª:  ${initial_capital:,.2f}")
    print(f"   –ö–æ–Ω–µ—á–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª:   ${final_capital:,.2f}")
    print(f"   –ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: ${total_return_abs:,.2f}")
    print(f"   –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:         {total_return_pct:.2f}%")
    
    # –ê–Ω–Ω—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
    years = total_days / 365.25
    annualized_return = ((final_capital / initial_capital) ** (1/years) - 1) * 100
    
    print(f"\nüìà –ê–ù–ù–£–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –î–û–•–û–î–ù–û–°–¢–¨:")
    print(f"   –ó–∞ {years:.2f} –≥–æ–¥–∞: {annualized_return:.2f}% –≥–æ–¥–æ–≤—ã—Ö")
    
    # –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º
    daily_return = total_return_pct / total_days
    weekly_return = daily_return * 7
    monthly_return = total_return_pct / months if months > 0 else 0
    
    print(f"\nüîÑ –î–û–•–û–î–ù–û–°–¢–¨ –ü–û –ü–ï–†–ò–û–î–ê–ú:")
    print(f"   –î–Ω–µ–≤–Ω–∞—è (—Å—Ä–µ–¥–Ω—è—è):  {daily_return:.3f}%")
    print(f"   –ù–µ–¥–µ–ª—å–Ω–∞—è (—Å—Ä–µ–¥–Ω—è—è): {weekly_return:.2f}%")
    print(f"   –ú–µ—Å—è—á–Ω–∞—è (—Å—Ä–µ–¥–Ω—è—è):  {monthly_return:.2f}%")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ä—ã–Ω–∫–æ–º
    print(f"\nüèÜ –û–¶–ï–ù–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    
    if total_return_pct > 15:
        rating = "üî• –û–¢–õ–ò–ß–ù–ê–Ø"
    elif total_return_pct > 10:
        rating = "‚úÖ –•–û–†–û–®–ê–Ø"
    elif total_return_pct > 5:
        rating = "üëç –£–ú–ï–†–ï–ù–ù–ê–Ø"
    elif total_return_pct > 0:
        rating = "‚ö†Ô∏è  –ù–ò–ó–ö–ê–Ø"
    else:
        rating = "‚ùå –£–ë–´–¢–û–ß–ù–ê–Ø"
    
    print(f"   –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: {rating}")
    print(f"   –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å {total_return_pct:.2f}% –∑–∞ {total_days} –¥–Ω–µ–π")
    
    if annualized_return > 20:
        annual_rating = "üöÄ –ü–†–ï–í–û–°–•–û–î–ù–ê–Ø"
    elif annualized_return > 15:
        annual_rating = "üî• –û–¢–õ–ò–ß–ù–ê–Ø"
    elif annualized_return > 10:
        annual_rating = "‚úÖ –•–û–†–û–®–ê–Ø"
    else:
        annual_rating = "üëç –£–ú–ï–†–ï–ù–ù–ê–Ø"
    
    print(f"   –ì–æ–¥–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {annual_rating}")
    print(f"   {annualized_return:.2f}% –≥–æ–¥–æ–≤—ã—Ö")
    
    print(f"\nüìã –ö–†–ê–¢–ö–ê–Ø –°–í–û–î–ö–ê:")
    print(f"   üéØ –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å +{total_return_pct:.2f}% –∑–∞ {total_days} –¥–Ω–µ–π")
    print(f"   üéØ –≠—Ç–æ –ø—Ä–∏–º–µ—Ä–Ω–æ {annualized_return:.1f}% –≥–æ–¥–æ–≤—ã—Ö")
    print(f"   üéØ –°—Ä–µ–¥–Ω—è—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å {daily_return:.3f}% –≤ –¥–µ–Ω—å")
    
    print("=" * 80)

if __name__ == "__main__":
    analyze_backtest_timeframe() 