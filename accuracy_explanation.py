#!/usr/bin/env python3
"""
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ (accuracy) –≤ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
"""

import numpy as np
import pandas as pd

def explain_accuracy_metrics():
    """–û–±—ä—è—Å–Ω—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏."""
    
    print("=" * 80)
    print("üìä –ü–û–ù–ò–ú–ê–ù–ò–ï –¢–û–ß–ù–û–°–¢–ò –í –¢–û–†–ì–û–í–´–• –°–ò–°–¢–ï–ú–ê–•")
    print("=" * 80)
    
    # 1. Accuracy (–¢–æ—á–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏)
    print("\nüéØ 1. ACCURACY (–¢–æ—á–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏)")
    print("-" * 50)
    print("–§–æ—Ä–º—É–ª–∞: Accuracy = –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è / –í—Å–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")
    print()
    
    # –ü—Ä–∏–º–µ—Ä —Å –Ω–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    total_predictions = 1000
    correct_predictions = 534  # LightGBM 1h accuracy 53.4%
    accuracy = correct_predictions / total_predictions
    
    print(f"–ü—Ä–∏–º–µ—Ä –∏–∑ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã (LightGBM 1h):")
    print(f"  –í—Å–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: {total_predictions}")
    print(f"  –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö: {correct_predictions}")
    print(f"  Accuracy: {accuracy:.1%}")
    print()
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–æ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å—é
    random_accuracy_3class = 1/3
    improvement = accuracy - random_accuracy_3class
    
    print(f"–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–æ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å—é:")
    print(f"  –°–ª—É—á–∞–π–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å (3 –∫–ª–∞—Å—Å–∞): {random_accuracy_3class:.1%}")
    print(f"  –ù–∞—à–∞ —Ç–æ—á–Ω–æ—Å—Ç—å: {accuracy:.1%}")
    print(f"  –£–ª—É—á—à–µ–Ω–∏–µ: +{improvement:.1%} ‚úÖ")
    print()
    
    # 2. Confidence Score
    print("\nüé™ 2. CONFIDENCE SCORE (–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–∏–≥–Ω–∞–ª–µ)")
    print("-" * 50)
    print("–≠—Ç–æ –û–¢–î–ï–õ–¨–ù–ê–Ø –º–µ—Ç—Ä–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–∏–≥–Ω–∞–ª–µ")
    print()
    
    confidence_scores = [0.45, 0.65, 0.78, 0.82, 0.91]
    print("–ü—Ä–∏–º–µ—Ä—ã confidence scores:")
    for i, conf in enumerate(confidence_scores, 1):
        interpretation = ""
        if conf < 0.5:
            interpretation = "‚ùå –û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å - –ù–ï —Ç–æ—Ä–≥—É–µ–º"
        elif conf < 0.65:
            interpretation = "‚ö†Ô∏è –ù–∏–∑–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å - –ù–ï —Ç–æ—Ä–≥—É–µ–º"
        elif conf < 0.8:
            interpretation = "‚úÖ –•–æ—Ä–æ—à–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å - –º–æ–∂–Ω–æ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å"
        else:
            interpretation = "üöÄ –í—ã—Å–æ–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å - —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª"
        
        print(f"  –°–∏–≥–Ω–∞–ª {i}: {conf:.2f} - {interpretation}")
    print()

def explain_trading_accuracy():
    """–û–±—ä—è—Å–Ω—è–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ç–æ—Ä–≥–æ–≤–ª–∏."""
    
    print("\nüí∞ 3. –¢–û–†–ì–û–í–ê–Ø –¢–û–ß–ù–û–°–¢–¨ vs –ú–û–î–ï–õ–¨–ù–ê–Ø –¢–û–ß–ù–û–°–¢–¨")
    print("-" * 50)
    
    print("üìä –ú–æ–¥–µ–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å (53.4%):")
    print("  - –ö–∞–∫ —á–∞—Å—Ç–æ –º–æ–¥–µ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∫–ª–∞—Å—Å (BUY/SELL/HOLD)")
    print("  - –ò–∑–º–µ—Ä—è–µ—Ç—Å—è –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("  - –ù–ï –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å —Å–¥–µ–ª–æ–∫")
    print()
    
    print("üí∞ –¢–æ—Ä–≥–æ–≤–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞):")
    print("  - Win rate: 24.7% (–ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö —Å–¥–µ–ª–æ–∫)")
    print("  - Profit factor: 3.55 (–ø—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫)")
    print("  - –û–±—â–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: +9.42%")
    print("  - Sharpe ratio: 1.885")
    print()
    
    print("üéØ –í–ê–ñ–ù–û –ü–û–ù–ò–ú–ê–¢–¨:")
    print("  ‚úÖ –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏ ‚â† –í—ã—Å–æ–∫–∞—è –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å")
    print("  ‚úÖ –ú–æ–∂–Ω–æ –±—ã—Ç—å –ø—Ä–∏–±—ã–ª—å–Ω—ã–º —Å –Ω–∏–∑–∫–∏–º win rate")
    print("  ‚úÖ –ì–ª–∞–≤–Ω–æ–µ - —Ä–∞–∑–º–µ—Ä –ø—Ä–∏–±—ã–ª–∏ vs —Ä–∞–∑–º–µ—Ä —É–±—ã—Ç–∫–æ–≤")
    print()

def explain_class_imbalance():
    """–û–±—ä—è—Å–Ω—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤."""
    
    print("\n‚öñÔ∏è 4. –ü–†–û–ë–õ–ï–ú–ê –ù–ï–°–ë–ê–õ–ê–ù–°–ò–†–û–í–ê–ù–ù–´–• –ö–õ–ê–°–°–û–í")
    print("-" * 50)
    
    # –†–µ–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–∑ –Ω–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    class_distribution = {
        '5m': {'hold': 25.6, 'buy': 47.6, 'sell': 26.8},
        '15m': {'hold': 22.8, 'buy': 53.2, 'sell': 24.0},
        '1h': {'hold': 20.1, 'buy': 57.9, 'sell': 22.0}
    }
    
    print("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –≤ –Ω–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö:")
    for timeframe, dist in class_distribution.items():
        print(f"\n{timeframe}:")
        for class_name, percentage in dist.items():
            print(f"  {class_name}: {percentage}%")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏—Å–±–∞–ª–∞–Ω—Å
        max_class = max(dist.values())
        min_class = min(dist.values())
        imbalance_ratio = max_class / min_class
        print(f"  –î–∏—Å–±–∞–ª–∞–Ω—Å: {imbalance_ratio:.1f}:1")
    
    print("\nüéØ –ü–æ—á–µ–º—É —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å:")
    print("  - –ú–æ–¥–µ–ª—å —Å–∫–ª–æ–Ω–Ω–∞ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –∫–ª–∞—Å—Å (BUY)")
    print("  - Accuracy —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è misleading –º–µ—Ç—Ä–∏–∫–æ–π")
    print("  - –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ (precision, recall, F1)")
    print()

def explain_confidence_calculation():
    """–û–±—ä—è—Å–Ω—è–µ—Ç —Ä–∞—Å—á–µ—Ç confidence score."""
    
    print("\nüîß 5. –ö–ê–ö –†–ê–°–°–ß–ò–¢–´–í–ê–ï–¢–°–Ø CONFIDENCE SCORE")
    print("-" * 50)
    
    print("–ù–∞—à confidence score —É—á–∏—Ç—ã–≤–∞–µ—Ç:")
    
    factors = {
        'indicator_agreement': 0.22,
        'signal_strength': 0.20,
        'volatility_factor': 0.15,
        'volume_confirmation': 0.28,  # –£–≤–µ–ª–∏—á–∏–ª–∏!
        'market_regime': 0.10,
        'sentiment_confirmation': 0.05
    }
    
    print("\n–í–µ—Å–∞ —Ñ–∞–∫—Ç–æ—Ä–æ–≤:")
    for factor, weight in factors.items():
        print(f"  {factor}: {weight:.0%}")
    
    print(f"\n–û–±—â–∏–π –≤–µ—Å: {sum(factors.values()):.0%}")
    
    print("\nüéØ –ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞:")
    example_factors = {
        'indicator_agreement': 0.8,      # 80% –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å–æ–≥–ª–∞—Å–Ω—ã
        'signal_strength': 0.7,          # –°–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª
        'volatility_factor': 0.6,        # –£–º–µ—Ä–µ–Ω–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
        'volume_confirmation': 0.9,      # –û—Ç–ª–∏—á–Ω–æ–µ –æ–±—ä–µ–º–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        'market_regime': 0.8,            # –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π —Ä–µ–∂–∏–º
        'sentiment_confirmation': 0.7     # –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π sentiment
    }
    
    weighted_sum = sum(factor_value * factors[factor_name] 
                      for factor_name, factor_value in example_factors.items())
    
    print("\n–ó–Ω–∞—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–æ–≤:")
    for factor_name, factor_value in example_factors.items():
        weight = factors[factor_name]
        contribution = factor_value * weight
        print(f"  {factor_name}: {factor_value:.1f} √ó {weight:.0%} = {contribution:.3f}")
    
    print(f"\n–ò—Ç–æ–≥–æ–≤—ã–π confidence: {weighted_sum:.3f} ({weighted_sum:.1%})")
    
    if weighted_sum >= 0.8:
        print("  üöÄ –í–´–°–û–ö–ò–ô confidence - —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª!")
    elif weighted_sum >= 0.65:
        print("  ‚úÖ –•–û–†–û–®–ò–ô confidence - –º–æ–∂–Ω–æ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å")
    else:
        print("  ‚ö†Ô∏è –ù–ò–ó–ö–ò–ô confidence - –ª—É—á—à–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
    
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    explain_accuracy_metrics()
    explain_trading_accuracy()
    explain_class_imbalance()
    explain_confidence_calculation()
    
    print("=" * 80)
    print("üéØ –ò–¢–û–ì–û–í–´–ô –í–´–í–û–î:")
    print("=" * 80)
    print()
    print("1. üìä Accuracy 53.4% - —ç—Ç–æ –•–û–†–û–®–ò–ô —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è 3-–∫–ª–∞—Å—Å–æ–≤–æ–π –∑–∞–¥–∞—á–∏")
    print("2. üé™ Confidence score - –±–æ–ª–µ–µ –≤–∞–∂–Ω–∞—è –º–µ—Ç—Ä–∏–∫–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π")
    print("3. üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–∂–Ω–µ–µ –º–æ–¥–µ–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏")
    print("4. ‚öñÔ∏è Volume confirmation (28% –≤–µ—Å–∞) - –∫–ª—é—á–µ–≤–æ–π —Ñ–∞–∫—Ç–æ—Ä –∫–∞—á–µ—Å—Ç–≤–∞")
    print("5. üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–æ—Ä–≥–æ–≤–ª–µ —Å –æ—Ç–ª–∏—á–Ω—ã–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏!")
    print()
    print("‚úÖ –ì–õ–ê–í–ù–û–ï: –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç +9.42% –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å")
    print("   —Å Sharpe ratio 1.885 - —ç—Ç–æ excellent —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üöÄ")

if __name__ == "__main__":
    main() 